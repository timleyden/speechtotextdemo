{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "demoName": {
      "type": "string",
      "defaultValue": "[concat('S2T', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Provide a unique name for the resources in this template."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Provide a location for the resources in this template."
      }
    },
    "sasExpiryDate": {
      "type": "string",
      "defaultValue": "2021-01-01T00:00:01Z",
      "metadata": {
        "description": "when deployed this template generates and store a sas token in appSettings to allow the Batch Transcription service to access audio blob files."
      }
    },
    "speechLocation": {
       "type": "string",
       "metadata": {
            "description": "description"
        },
        "allowedValues":[
          "australiaeast",
          "brazilsouth",
          "westus",
          "westus2",
          "westeurope",
          "northeurope",
          "southeastasia",
          "eastasia",
          "westcentralus",
          "southcentralus",
          "eastus",
          "eastus2",
          "canadacentral",
          "japaneast",
          "centralindia",
          "uksouth",
          "japanwest",
          "koreacentral",
          "francecentral",
          "northcentralus",
          "centralus",
          "southafricanorth",
          "uaenorth"
        ]
    }
  },
  "variables": {
    "audioStorageAccountName": "[toLower(if(greater(length(concat('audiostore', parameters('demoName'))),23),substring(concat('audiostore', parameters('demoName')),0,24),concat('audiostore', parameters('demoName'))))]",
    "functionAppName": "[concat(parameters('demoName'), 'FuncApp')]",
    "siteAppName": "[concat(parameters('demoName'), 'TranscriptionViewerApp')]",
    "hostingPlanName": "[concat(parameters('demoName'), 'FunctionServicePlan')]",
    "webhostingPlanName": "[concat(parameters('demoName'), 'LinuxServicePlan')]",
    "audioContainer": "audio",
    "transcriptContainer": "transcripts",
    "trainingContainer": "cutaudio",
    "functionStorageAccountName": "[toLower(if(greater(length(concat('funcstore', parameters('demoName'))),23),substring(concat('funcstore', parameters('demoName')),0,24),concat('funcstore', parameters('demoName'))))]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('functionStorageAccountName'))]",
    "audiostorageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('audioStorageAccountName'))]",
    "functionWorkerRuntime": "dotnet",
    "appInsightsName": "speechToTextDemoAppInsights",
    "cognititiveServiceName": "[concat(parameters('demoName'), 'SpeechServices')]",
    "webLocation":"australiasoutheast",
    "locationComment":"this has to be a location which does not match the function app service plan because app serivce does not support linux and window runtime coexisting in the samre location in the same rg",
    "readOnlyAccountSasProperties": {
      "signedServices": "b",
      "signedPermission": "r",
      "signedExpiry": "[parameters('sasExpiryDate')]",
      "signedResourceTypes": "o"
    },
    "accountSasProperties": {
      "signedServices": "b",
      "signedPermission": "crlw",
      "signedExpiry": "[parameters('sasExpiryDate')]",
      "signedResourceTypes": "sco"
    }
  },
  "resources": [
    {
      "name": "[variables('AudioStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2017-10-01",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "dependsOn": [
      ],
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "Storage account for audio files"
      },
      "properties": {
        "accessTier": "Hot"
      },
       
      "resources": [
        {
          "name": "[concat(variables('AudioStorageAccountName'),'/default/',variables('transcriptContainer'))]",
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2018-07-01",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('AudioStorageAccountName'))]",
            "[resourceId('Microsoft.Web/sites/config',variables('functionAppName'),'appSettings')]"
          ]
        },
        {
          "name": "[concat(variables('AudioStorageAccountName'),'/default/',variables('audioContainer'))]",
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2018-07-01",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('AudioStorageAccountName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers',variables('AudioStorageAccountName'),'default',variables('transcriptContainer'))]"
          ]
        },
        {
          "name": "[concat(variables('AudioStorageAccountName'),'/default/',variables('trainingContainer'))]",
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2018-07-01",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('AudioStorageAccountName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers',variables('AudioStorageAccountName'),'default',variables('audioContainer'))]"
          ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('audioStorageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('audioStorageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
  "cors": {
                    "corsRules": [
                        {
                            "allowedOrigins": [
                                "*"
                            ],
                            "allowedMethods": [
                                "POST",
                                "GET",
                                "PUT"    
                            ],
                            "maxAgeInSeconds": 0,
                            "exposedHeaders": [
                                ""
                            ],
                            "allowedHeaders": [
                                "*"
                            ]
                        }
                    ]
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('functionStorageAccountName')]",
      "apiVersion": "2016-12-01",
      "location": "[parameters('location')]",
      "kind": "Storage",
      "tags": {
        "displayName": "Storage account for functions content"
      },
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "tags": {
        "displayName": "App Service Plan - Consumption"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2017-04-18",
      "name": "[variables('cognititiveServiceName')]",
      "dependsOn": [
      ],
      "location": "[parameters('speechLocation')]",
      "tags": {
        "displayName": "Speech Service"
      },
      "sku": {
        "name": "S0"
      },
      "kind": "SpeechServices",
      "properties": {
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('functionAppName'))]": "Resource",
        "displayName": "Application Insights"
      },
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('appInsightsName')]"
      }
    },
    {
      "name": "[concat(variables('functionAppName'),'/appSettings')]",
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "getTriggerUrlLinkedTemplate",
        "[variables('cognititiveServiceName')]"
      ],
      "tags": {
        "displayName": "WebAppSettings"
      },
      "properties": {
        "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
        "WEBSITE_CONTENTSHARE": "[toLower(variables('functionAppName'))]",
        "FUNCTIONS_EXTENSION_VERSION": "~3",
        "WEBSITE_NODE_DEFAULT_VERSION": "8.11.1",
        "FUNCTIONS_WORKER_RUNTIME": "[variables('functionWorkerRuntime')]",
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]",
        "AzureWebJobsSecretStorageType": "files",
        "SubscriptionKey": "[listkeys(resourceId('Microsoft.CognitiveServices/accounts', variables('cognititiveServiceName')),'2017-04-18').key1]",
        "Region": "[parameters('location')]",
        "SASToken": "[concat('?',listAccountSas(variables('AudioStorageAccountName'), '2018-07-01', variables('accountSasProperties')).accountSasToken)]",
        "SASTokenReadOnly": "[concat('?',listAccountSas(variables('AudioStorageAccountName'), '2018-07-01', variables('readOnlyAccountSasProperties')).accountSasToken)]",
        "StorageAccountName": "[variables('audioStorageAccountName')]",
        "TranscriptContainer": "[variables('transcriptContainer')]",
        "AudioContainer": "[variables('audioContainer')]",
        "TrainingFunctionUrl": "[reference('getTriggerUrlLinkedTemplate').outputs.traintriggerUrl.value]",
        "AddDiarization": "True",
        "Project": "function",
        "SCM_REPOSITORY_PATH":"d:/local/repository",
        "StorageConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('audioStorageAccountName'), ';AccountKey=', listKeys(variables('audiostorageAccountid'),'2015-05-01-preview').key1)]",
        "CallbackFunctionUrl":"[reference('getTriggerUrlLinkedTemplate').outputs.datasetUploadCallback.value]",
        "CogsInternalId":"[reference(variables('cognititiveServiceName')).internalId]",
        "ProxyBaseUrl":"[concat('https://',reference(variables('functionAppName')).defaultHostName,'/api/proxy')]",
        "AZURE_FUNCTION_PROXY_BACKEND_URL_DECODE_SLASHES":"true"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "tags": {
        "displayName": "Function app"
      },
      "dependsOn": [
        "[variables('hostingPlanName')]"
      ],
      "properties": {
        
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "8.11.1"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionWorkerRuntime')]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsSecretStorageType",
              "value": "files"
            },
            {
              "name": "Project",
              "value": "function"
            },
            {
              "name": "SCM_REPOSITORY_PATH",
              "value": "d:/local/repository"
            }
          ]
        }        
      },
      "resources": [
        {
          "name":"web",
          "type":"config",
          "apiVersion": "2018-11-01",
          "properties":{
            "cors": {
                    "allowedOrigins": [
                        "*"
                    ],
                    "supportCredentials": false
                }
          },
          "dependsOn":["[variables('functionAppName')]"]
        }
      ]
    },
    {
      "apiVersion": "2018-02-01",
      "name": "[concat(variables('functionAppName'),'/web')]",
      "type": "Microsoft.Web/sites/sourcecontrols",
      "tags": {
        "displayName": "Bind function app to github repo"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
      ],
      "properties": {
        "RepoUrl": "https://github.com/timleyden/speechtotextdemo.git",
        "branch": "transcriptionviewerv3",
        "IsManualIntegration": true
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "getTriggerUrlLinkedTemplate",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/sourcecontrols',variables('functionAppName'),'web')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(if(not(contains(deployment().properties,'templateLink')),'https://raw.githubusercontent.com/timleyden/speechtotextdemo/transcriptionviewerv3/',deployment().properties.templateLink.uri), 'childTemplate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "functionAppName": {
            "value": "[variables('functionAppName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "RegisterCallback",
      "dependsOn": [
       "[resourceId('Microsoft.Web/sites/config',variables('siteAppName'),'appSettings')]",
       "getTriggerUrlLinkedTemplate"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(reference('getTriggerUrlLinkedTemplate').outputs.datasetUploadCallback.value,'&Register=Yes')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {}
      }
    },
    {
      "name": "[variables('siteAppName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "location": "[variables('webLocation')]",
      "tags": {
        "displayName": "Transcription Viewer Web App"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('webhostingPlanName'))]",
                 "[variables('appInsightsName')]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('webhostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "SCM_REPOSITORY_PATH",
              "value": "/tmp/repository"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
            }
          ],

          "linuxFxVersion": "NODE|12-lts"
        }

      }
    },
    {
    "name": "[concat(variables('siteAppName'),'/appSettings')]",
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "location": "[parameters('location')]",
      "dependsOn": [
          "[variables('siteAppName')]",
         "getTriggerUrlLinkedTemplate",
         "[resourceId('Microsoft.Web/sites/config',variables('functionAppName'),'appSettings')]",
         "[resourceId('Microsoft.Web/sites/sourcecontrols',variables('siteAppName'),'web')]"

      ],
      "tags": {
        "displayName": "WebAppSettings"
      },
      "properties": {
        "SCM_REPOSITORY_PATH":"/tmp/repository",
        "WEBSITES_ENABLE_APP_SERVICE_STORAGE":"false",
        "configServiceUrl":"[reference('getTriggerUrlLinkedTemplate').outputs.configtriggerUrl.value]",
        "APPINSIGHTS_INSTRUMENTATIONKEY":"[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
      }
    },
    {
      "apiVersion": "2018-02-01",
      "name": "[concat(variables('siteAppName'),'/web')]",
      "type": "Microsoft.Web/sites/sourcecontrols",
      "tags": {
        "displayName": "Bind linux app to github repo"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', variables('siteAppName'))]"
      ],
      "properties": {
        "RepoUrl": "https://github.com/timleyden/speechtotextdemo.git",
        "branch": "transcriptionviewerv3",
        "IsManualIntegration": true
      }
    },
    {
      "name": "[variables('webhostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-11-01",
      "location": "[variables('webLocation')]",
      "kind": "linux",

      "sku": {
        "name": "B3",
        "tier": "Basic",
        "size": "B3",
        "family": "B",
        "capacity": 1
      },
      "tags": {
        "displayName": "Linux App Service Plan"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "resizeAppServicePlanToFree",
      "dependsOn": [
         "[resourceId('Microsoft.Web/sites/config',variables('siteAppName'),'appSettings')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(if(not(contains(deployment().properties,'templateLink')),'https://raw.githubusercontent.com/timleyden/speechtotextdemo/transcriptionviewerv3/',deployment().properties.templateLink.uri), 'resizeAppServicePlan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "servicePlanName": {
            "value": "[variables('webhostingPlanName')]"
          },
          "location":{
            "value":"[variables('webLocation')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "appurl": {
      "type": "string",
      "value": "[concat('https://',reference(variables('siteAppName')).defaultHostName)]"

    }
  }
}